// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slangs.Data;

#nullable disable

namespace Slangs.Migrations
{
    [DbContext(typeof(SlangDbContext))]
    [Migration("20240130074544_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Slangs.Entities.Slang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Meaning")
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.Property<string>("SlangName")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Slang");
                });

            modelBuilder.Entity("Slangs.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FavSlang")
                        .HasColumnType("longtext");

                    b.Property<string>("Input")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserInputId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserInputId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Slangs.Entities.User", b =>
                {
                    b.HasOne("Slangs.Entities.Slang", "UserInput")
                        .WithMany()
                        .HasForeignKey("UserInputId");

                    b.Navigation("UserInput");
                });
#pragma warning restore 612, 618
        }
    }
}
